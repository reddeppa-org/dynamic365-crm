// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace DataExportSales.Models
{
    public partial class RelationshipResponse
    {
        private string _entity1LogicalName;
        
        /// <summary>
        /// Optional. Logical name of Entity 1
        /// </summary>
        public string Entity1LogicalName
        {
            get { return this._entity1LogicalName; }
            set { this._entity1LogicalName = value; }
        }
        
        private string _entity2LogicalName;
        
        /// <summary>
        /// Optional. Logical name of Entity 2
        /// </summary>
        public string Entity2LogicalName
        {
            get { return this._entity2LogicalName; }
            set { this._entity2LogicalName = value; }
        }
        
        private string _intersectLogicalName;
        
        /// <summary>
        /// Optional. Logical name of intersect Entity
        /// </summary>
        public string IntersectLogicalName
        {
            get { return this._intersectLogicalName; }
            set { this._intersectLogicalName = value; }
        }
        
        private bool? _isIntersect;
        
        /// <summary>
        /// Optional. Is this intersect Entity
        /// </summary>
        public bool? IsIntersect
        {
            get { return this._isIntersect; }
            set { this._isIntersect = value; }
        }
        
        private string _name;
        
        /// <summary>
        /// Optional. Relationship display name
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set { this._name = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the RelationshipResponse class.
        /// </summary>
        public RelationshipResponse()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken entity1LogicalNameValue = inputObject["Entity1LogicalName"];
                if (entity1LogicalNameValue != null && entity1LogicalNameValue.Type != JTokenType.Null)
                {
                    this.Entity1LogicalName = ((string)entity1LogicalNameValue);
                }
                JToken entity2LogicalNameValue = inputObject["Entity2LogicalName"];
                if (entity2LogicalNameValue != null && entity2LogicalNameValue.Type != JTokenType.Null)
                {
                    this.Entity2LogicalName = ((string)entity2LogicalNameValue);
                }
                JToken intersectLogicalNameValue = inputObject["IntersectLogicalName"];
                if (intersectLogicalNameValue != null && intersectLogicalNameValue.Type != JTokenType.Null)
                {
                    this.IntersectLogicalName = ((string)intersectLogicalNameValue);
                }
                JToken isIntersectValue = inputObject["IsIntersect"];
                if (isIntersectValue != null && isIntersectValue.Type != JTokenType.Null)
                {
                    this.IsIntersect = ((bool)isIntersectValue);
                }
                JToken nameValue = inputObject["Name"];
                if (nameValue != null && nameValue.Type != JTokenType.Null)
                {
                    this.Name = ((string)nameValue);
                }
            }
        }
    }
}
