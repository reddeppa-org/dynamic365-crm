// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace DataExportSales.Models
{
    public partial class DiscoverResponse
    {
        private string _connectorUrl;
        
        /// <summary>
        /// Optional. Connector URL
        /// </summary>
        public string ConnectorUrl
        {
            get { return this._connectorUrl; }
            set { this._connectorUrl = value; }
        }
        
        private string _organizationId;
        
        /// <summary>
        /// Optional. Organization Id
        /// </summary>
        public string OrganizationId
        {
            get { return this._organizationId; }
            set { this._organizationId = value; }
        }
        
        private string _organizationName;
        
        /// <summary>
        /// Optional. Organization name
        /// </summary>
        public string OrganizationName
        {
            get { return this._organizationName; }
            set { this._organizationName = value; }
        }
        
        private string _organizationUrl;
        
        /// <summary>
        /// Optional. Organization URL
        /// </summary>
        public string OrganizationUrl
        {
            get { return this._organizationUrl; }
            set { this._organizationUrl = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the DiscoverResponse class.
        /// </summary>
        public DiscoverResponse()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken connectorUrlValue = inputObject["ConnectorUrl"];
                if (connectorUrlValue != null && connectorUrlValue.Type != JTokenType.Null)
                {
                    this.ConnectorUrl = ((string)connectorUrlValue);
                }
                JToken organizationIdValue = inputObject["OrganizationId"];
                if (organizationIdValue != null && organizationIdValue.Type != JTokenType.Null)
                {
                    this.OrganizationId = ((string)organizationIdValue);
                }
                JToken organizationNameValue = inputObject["OrganizationName"];
                if (organizationNameValue != null && organizationNameValue.Type != JTokenType.Null)
                {
                    this.OrganizationName = ((string)organizationNameValue);
                }
                JToken organizationUrlValue = inputObject["OrganizationUrl"];
                if (organizationUrlValue != null && organizationUrlValue.Type != JTokenType.Null)
                {
                    this.OrganizationUrl = ((string)organizationUrlValue);
                }
            }
        }
    }
}
